@using RSApp.Core.Services.ViewModels;
@model IEnumerable<PropertyVm>
@using RSApp.Core.Services.Dtos.Account
@using Microsoft.AspNetCore.Http;
@using RSApp.Core.Services.Helpers;
@inject IHttpContextAccessor _httpContext;

@{
  ViewData["Title"] = "Agent Properties";
  AuthenticationResponse? user = _httpContext.HttpContext.Session.Get<AuthenticationResponse>("user");
}

<h1 class="text-2xl my-3">@ViewData["Title"]</h1>
<div class="row">
  @if (Model.Count() != 0)
  {
    @foreach (var item in Model)
    {
      <div class="card mb-3 px-0" style="max-width: 540px;">
        <div class="row g-0">
          <div class="col-md-4">
            <img src="@item.Portrait" class="img-fluid rounded-start h-full" alt="@item.Description">
          </div>
          <div class="col-md-8">
            <div class="card-body flex flex-col gap-2">
              <h3 class="card-title"><strong>Property code: </strong>@item.Code</h3>
              <h4 class="card-text"><strong>Agent: </strong><small class="text-body-secondary">@item.Seller.FullName</small>
              </h4>
              <div class="flex flex-row align-baseline gap-3">
                <p class="card-text"><strong>Type : </strong><small class="text-body-secondary">@item.Type</small></p>
                <p class="card-text"><strong>Sale Type: </strong><small class="text-body-secondary">@item.Sale</small></p>
              </div>
              <div class="flex flex-row align-baseline gap-3">
                <p class="card-text"><strong>Rooms : </strong><small class="text-body-secondary">@item.Rooms</small></p>
                <p class="card-text"><strong>Bathrooms: </strong><small class="text-body-secondary">@item.Bathrooms</small>
                </p>
              </div>
              <div class="flex flex-row align-baseline gap-3">
                <p class="card-text"><strong>Area : </strong><small class="text-body-secondary">@item.Area</small></p>
                <p class="card-text"><strong>Price: </strong><small class="text-body-secondary">@item.Price</small></p>
              </div>
              <div class="flex flex-row gap-3">
                @if (user != null && user.Roles.Where(x => x.ToString() == "Client" || x.ToString() == "Agent").Any())
                {
                  <form asp-action=@(item.Favorite ?"DeleteFromFavorite" :"AddToFavorite") asp-controller="Property"
              onsubmit="function(e){e.preventDefault();}">
                    <input type="hidden" name="propertyId" value="@item.Id" />
                    <button type="submit" class="btn btn-outline-@(item.Favorite ?"danger" :"primary")"><i
                  class="bi bi-star-fill"></i></button>
                  </form>
                }
                <button data-modal-target="modal_@item.Id" data-modal-toggle="modal_@item.Id"
              class="block text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
              type="button">
                  Details
                </button>
              </div>
              <div id="modal_@item.Id" data-modal-backdrop="static" tabindex="-1" aria-hidden="true"
            class="fixed top-0 left-0 right-0 z-50 hidden w-full p-4 overflow-x-hidden overflow-y-auto md:inset-0 h-[calc(100%-1rem)] max-h-full">
                <div class="relative w-full max-w-2xl max-h-full">
                  <!-- Modal content -->
              <div class="relative bg-white rounded-lg shadow dark:bg-gray-700">
                    <!-- Modal header -->
                <div class="flex items-start justify-between p-4 border-b rounded-t dark:border-gray-600">
                      <h3 class="text-xl font-semibold">
                        Details of : @item.Code
                      </h3>
                      <button type="button"
                    class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-600 dark:hover:text-white"
                    data-modal-hide="modal_@item.Id">
                        <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                          <path fill-rule="evenodd"
                        d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                        clip-rule="evenodd"></path>
                        </svg>
                      </button>
                    </div>
                    <!-- Modal body -->
                <div class="p-6 space-y-6 overflow-auto h-80">
                      <p class="text-base leading-relaxed text-black dark:text-gray-400">
                        <strong>Description:</strong> @item.Description
                      </p>
                      <div>
                        <div class="flex flex-col gap-2">
                          <strong>Agent information</strong>
                          <div class="flex flex-row align-baseline items-center gap-1">
                            <img src="@item.Seller.Image" alt="@item.Seller.FullName" class="rounded-full h-10 w-10">
                            <span>@item.Seller.FullName</span>
                          </div>
                          <div class="flex flex-row align-baseline items-center gap-2">
                            <i class="bi bi-telephone-fill"></i>
                            <span>@item.Seller.PhoneNumber</span>
                            <i class="bi bi-envelope-fill"></i>
                            <span>@item.Seller.Email</span>
                          </div>
                        </div>
                      </div>
                      <div>
                        <strong>
                          <h3>Images</h3>
                        </strong>
                      </div>
                      <section class="img-secondary max-w-2xl h-80">
                        @foreach (var image in item.Images)
                        {
                          <div>
                            <img src="@image.ImagePath" class="img-fluid rounded-lg " alt="@item.Description">
                          </div>
                        }
                      </section>
                    </div>
                    <div
                  class="flex items-center p-6 space-x-2 border-t border-gray-200 rounded-b dark:border-gray-600 flex-row gap-1 align-baseline">
                      <section class="flex flex-row gap-1">
                        Upgrades:
                        @foreach (var upgrade in item.Upgrades)
                        {
                          <span id="upgrades" class="text-sm text-gray-600 dark:text-gray-400 ">@upgrade.Name</span>
                        }
                        <script>
                          var upgrade = document.querySelectorAll('#upgrades');
                          upgrade.forEach((item) => {
                            item.classList.add('bg-blue-100', 'text-blue-800', 'rounded-full', 'px-2', 'py-1', 'text-xs', 'font-semibold', 'mr-2', 'mb-2', 'dark:bg-blue-800', 'dark:text-blue-100');
                          });
                        </script>
                        <section />
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    }
  }
  else
  {
    <div class="alert alert-warning" role="alert">
      this agent doesn't have any properties yet
    </div>
  }
</div>
